{"ast":null,"code":"// src/api.js\n\nimport axios from 'axios';\n\n// Set up the base URL for your FastAPI backend\nconst API_URL = 'http://localhost:8081'; // Update this URL based on your FastAPI server configuration\n\n// Function to ask a question\nexport async function askQuestion(question, imagePath) {\n  try {\n    const response = await axios.post(`${API_URL}/ask/`, {\n      question,\n      image_path: imagePath || ''\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Check if response structure is as expected\n    const responseData = response.data.response;\n    let content;\n    let logs;\n    if (typeof responseData === 'string') {\n      // Handle cases where responseData is a simple string\n      content = responseData;\n      logs = {}; // Or any default value\n    } else {\n      // Handle cases where responseData is an object with more details\n      content = responseData.content || 'No content available';\n      logs = responseData.logs || {};\n    }\n    return {\n      content,\n      logs\n    };\n  } catch (error) {\n    console.error(\"Error asking question:\", error);\n    throw error;\n  }\n}\n\n// Function to upload a file\nexport async function uploadFile(file) {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await axios.post(`${API_URL}/upload/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data.filename;\n  } catch (error) {\n    console.error(\"Error uploading file:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","API_URL","askQuestion","question","imagePath","response","post","image_path","headers","responseData","data","content","logs","error","console","uploadFile","file","formData","FormData","append","filename"],"sources":["/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/api.js"],"sourcesContent":["// src/api.js\n\nimport axios from 'axios';\n\n// Set up the base URL for your FastAPI backend\nconst API_URL = 'http://localhost:8081'; // Update this URL based on your FastAPI server configuration\n\n// Function to ask a question\nexport async function askQuestion(question, imagePath) {\n  try {\n    const response = await axios.post(`${API_URL}/ask/`, {\n      question,\n      image_path: imagePath || ''\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Check if response structure is as expected\n    const responseData = response.data.response;\n\n    let content;\n    let logs;\n\n    if (typeof responseData === 'string') {\n      // Handle cases where responseData is a simple string\n      content = responseData;\n      logs = {}; // Or any default value\n    } else {\n      // Handle cases where responseData is an object with more details\n      content = responseData.content || 'No content available';\n      logs = responseData.logs || {};\n    }\n\n    return { content, logs };\n  } catch (error) {\n    console.error(\"Error asking question:\", error);\n    throw error;\n  }\n}\n\n\n\n// Function to upload a file\nexport async function uploadFile(file) {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await axios.post(`${API_URL}/upload/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n\n    return response.data.filename;\n  } catch (error) {\n    console.error(\"Error uploading file:\", error);\n    throw error;\n  }\n}\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,eAAeC,WAAWA,CAACC,QAAQ,EAAEC,SAAS,EAAE;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,OAAO,EAAE;MACnDE,QAAQ;MACRI,UAAU,EAAEH,SAAS,IAAI;IAC3B,CAAC,EAAE;MACDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,IAAI,CAACL,QAAQ;IAE3C,IAAIM,OAAO;IACX,IAAIC,IAAI;IAER,IAAI,OAAOH,YAAY,KAAK,QAAQ,EAAE;MACpC;MACAE,OAAO,GAAGF,YAAY;MACtBG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACL;MACAD,OAAO,GAAGF,YAAY,CAACE,OAAO,IAAI,sBAAsB;MACxDC,IAAI,GAAGH,YAAY,CAACG,IAAI,IAAI,CAAC,CAAC;IAChC;IAEA,OAAO;MAAED,OAAO;MAAEC;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF;;AAIA;AACA,OAAO,eAAeE,UAAUA,CAACC,IAAI,EAAE;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,UAAU,EAAEgB,QAAQ,EAAE;MAChET,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOH,QAAQ,CAACK,IAAI,CAACU,QAAQ;EAC/B,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}