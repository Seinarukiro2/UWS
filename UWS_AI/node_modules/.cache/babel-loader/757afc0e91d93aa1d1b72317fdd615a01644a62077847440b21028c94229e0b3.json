{"ast":null,"code":"var _jsxFileName = \"/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, IconButton, Menu, MenuItem } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport { askQuestion, uploadFile } from './api'; // Import your API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [logs, setLogs] = useState([]);\n  const [showLogs, setShowLogs] = useState(false);\n  const [language, setLanguage] = useState('EN');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [file, setFile] = useState(null); // State for the file\n  const [isTyping, setIsTyping] = useState(false); // State for typing effect\n  const logsEndRef = useRef(null);\n  const fileInputRef = useRef(null); // Reference for the hidden file input\n\n  // Function to handle sending a question\n  const handleSendMessage = async () => {\n    if (message.trim() === '') return;\n\n    // Add user message to chat history\n    setChatHistory(prevHistory => [...prevHistory, {\n      sender: 'user',\n      text: message\n    }]);\n\n    // Add logs\n    setLogs(prevLogs => [...prevLogs, `Message sent: ${message}`]);\n\n    // Show typing indicator\n    setIsTyping(true);\n    try {\n      // Handle file upload if a file is selected\n      const imagePath = file ? URL.createObjectURL(file) : null;\n      const {\n        content,\n        logs\n      } = await askQuestion(message, imagePath);\n\n      // Check for no relevant information\n      if (content === 'No relevant information found.') {\n        setChatHistory(prevHistory => [...prevHistory, {\n          sender: 'ai',\n          text: content\n        }]);\n      } else {\n        setChatHistory(prevHistory => [...prevHistory, {\n          sender: 'ai',\n          text: content\n        }]);\n      }\n\n      // Add logs to the log state\n      setLogs(prevLogs => [...prevLogs, `AI responded: ${content}`, `Logs: ${JSON.stringify(logs, null, 2)}`]);\n\n      // Clear file state after sending the question\n      setFile(null);\n    } catch (error) {\n      setChatHistory(prevHistory => [...prevHistory, {\n        sender: 'ai',\n        text: \"Failed to get a response.\"\n      }]);\n      setLogs(prevLogs => [...prevLogs, `Error asking question: ${error.message}`]);\n    } finally {\n      // Hide typing indicator\n      setIsTyping(false);\n      setMessage('');\n    }\n  };\n\n  // Function to handle file selection\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  // Function to copy text to clipboard\n  const handleCopyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      alert('Copied to clipboard!');\n    });\n  };\n\n  // Scroll to the bottom of logs when new logs are added\n  useEffect(() => {\n    var _logsEndRef$current;\n    (_logsEndRef$current = logsEndRef.current) === null || _logsEndRef$current === void 0 ? void 0 : _logsEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [logs]);\n\n  // Function to toggle logs visibility\n  const toggleLogs = () => {\n    setShowLogs(prev => !prev);\n  };\n\n  // Function to open language menu\n  const handleClickLanguageMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  // Function to close language menu\n  const handleCloseLanguageMenu = () => {\n    setAnchorEl(null);\n  };\n\n  // Function to change language\n  const handleLanguageChange = lang => {\n    setLanguage(lang);\n    handleCloseLanguageMenu();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '80vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 8,\n        right: 8,\n        zIndex: 1300\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClickLanguageMenu,\n        sx: {\n          color: 'text.secondary'\n        },\n        children: /*#__PURE__*/_jsxDEV(LanguageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          position: 'absolute',\n          top: 8,\n          right: 40,\n          color: 'text.secondary'\n        },\n        children: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: handleCloseLanguageMenu,\n        sx: {\n          mt: '10px',\n          // Margin top to position the menu below the button\n          zIndex: 1400 // Set a high z-index for the menu\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: language === 'EN',\n          onClick: () => handleLanguageChange('EN'),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: language === 'DE',\n          onClick: () => handleLanguageChange('DE'),\n          children: \"DE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: language === 'RU',\n          onClick: () => handleLanguageChange('RU'),\n          children: \"RU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: language === 'UA',\n          onClick: () => handleLanguageChange('UA'),\n          children: \"UA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      color: \"primary\",\n      children: \"AI Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        mb: 2,\n        p: 2,\n        border: '1px solid #ccc',\n        borderRadius: '4px'\n      },\n      children: [chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          mb: 2,\n          justifyContent: entry.sender === 'user' ? 'flex-end' : 'flex-start'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            maxWidth: '70%',\n            bgcolor: entry.sender === 'user' ? 'primary.main' : '#f1f1f1',\n            // Light gray for AI\n            color: entry.sender === 'user' ? 'white' : 'black',\n            p: 2,\n            borderRadius: entry.sender === 'user' ? '16px 16px 0 16px' : '16px 16px 16px 0',\n            wordBreak: 'break-word',\n            // Break words to prevent overflow\n            whiteSpace: 'pre-wrap',\n            // Respect line breaks\n            overflowWrap: 'break-word',\n            // Break long words\n            position: 'relative' // For positioning copy icon\n          },\n          children: [entry.text, entry.sender === 'ai' && /*#__PURE__*/_jsxDEV(IconButton, {\n            sx: {\n              position: 'absolute',\n              bottom: '-24px',\n              // Move icon down\n              left: '8px',\n              // Align with text\n              color: 'text.secondary',\n              '&:hover': {\n                color: 'text.primary'\n              },\n              p: 0,\n              // Remove padding\n              width: '16px',\n              // Smaller icon\n              height: '16px'\n            },\n            onClick: () => handleCopyToClipboard(entry.text),\n            children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          mb: 2,\n          justifyContent: 'flex-start'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            maxWidth: '70%',\n            bgcolor: '#f1f1f1',\n            p: 2,\n            borderRadius: '16px 16px 16px 0',\n            wordBreak: 'break-word',\n            whiteSpace: 'pre-wrap',\n            overflowWrap: 'break-word'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            children: \"AI is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Enter your message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') handleSendMessage(); // Send on Enter key\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendMessage,\n        sx: {\n          ml: 2\n        },\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 30\n        }, this),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        } // Hide the native file input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => fileInputRef.current.click() // Trigger file input click\n        ,\n        sx: {\n          width: '15%'\n        } // Make button full width\n        ,\n        children: file ? `File: ${file.name}` : 'Select File'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleLogs,\n      sx: {\n        mb: 2,\n        alignSelf: 'flex-start',\n        color: 'primary.main',\n        '&:hover': {\n          color: 'primary.dark'\n        }\n      },\n      children: [showLogs ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"button\",\n        sx: {\n          ml: 1\n        },\n        children: \"Check Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), showLogs && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '150px',\n        // Adjust the height as needed\n        overflowY: 'auto',\n        borderTop: '1px solid #ccc',\n        p: 2,\n        bgcolor: '#f9f9f9',\n        borderRadius: '4px'\n      },\n      children: [logs.question && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), \" \", logs.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), logs.relevant_documents && logs.relevant_documents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Relevant Documents:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), logs.relevant_documents.map((doc, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"- \", doc]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: logsEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"2DVWAks7lgk/Z4vrk6ETeXm/weE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Container","TextField","Button","Typography","Box","IconButton","Menu","MenuItem","SendIcon","ContentCopyIcon","ExpandMoreIcon","ExpandLessIcon","LanguageIcon","askQuestion","uploadFile","jsxDEV","_jsxDEV","Home","_s","message","setMessage","chatHistory","setChatHistory","logs","setLogs","showLogs","setShowLogs","language","setLanguage","anchorEl","setAnchorEl","file","setFile","isTyping","setIsTyping","logsEndRef","fileInputRef","handleSendMessage","trim","prevHistory","sender","text","prevLogs","imagePath","URL","createObjectURL","content","JSON","stringify","error","handleFileChange","e","target","files","length","handleCopyToClipboard","navigator","clipboard","writeText","then","alert","_logsEndRef$current","current","scrollIntoView","behavior","toggleLogs","prev","handleClickLanguageMenu","event","currentTarget","handleCloseLanguageMenu","handleLanguageChange","lang","maxWidth","sx","mt","display","flexDirection","height","position","children","top","right","zIndex","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","open","Boolean","onClose","selected","gutterBottom","align","flexGrow","overflowY","mb","p","border","borderRadius","map","entry","index","justifyContent","bgcolor","wordBreak","whiteSpace","overflowWrap","bottom","left","width","fontSize","alignItems","fullWidth","label","value","onChange","onKeyPress","key","ml","endIcon","type","ref","accept","style","click","name","alignSelf","borderTop","question","relevant_documents","doc","_c","$RefreshReg$"],"sources":["/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, IconButton, Menu, MenuItem } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport { askQuestion, uploadFile } from './api'; // Import your API functions\n\nconst Home = () => {\n    const [message, setMessage] = useState('');\n    const [chatHistory, setChatHistory] = useState([]);\n    const [logs, setLogs] = useState([]);\n    const [showLogs, setShowLogs] = useState(false);\n    const [language, setLanguage] = useState('EN');\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [file, setFile] = useState(null); // State for the file\n    const [isTyping, setIsTyping] = useState(false); // State for typing effect\n    const logsEndRef = useRef(null);\n    const fileInputRef = useRef(null); // Reference for the hidden file input\n\n    // Function to handle sending a question\n    const handleSendMessage = async () => {\n        if (message.trim() === '') return;\n\n        // Add user message to chat history\n        setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { sender: 'user', text: message }\n        ]);\n\n        // Add logs\n        setLogs((prevLogs) => [\n            ...prevLogs,\n            `Message sent: ${message}`\n        ]);\n\n        // Show typing indicator\n        setIsTyping(true);\n\n        try {\n            // Handle file upload if a file is selected\n            const imagePath = file ? URL.createObjectURL(file) : null;\n            const { content, logs } = await askQuestion(message, imagePath);\n\n            // Check for no relevant information\n            if (content === 'No relevant information found.') {\n                setChatHistory((prevHistory) => [\n                    ...prevHistory,\n                    { sender: 'ai', text: content }\n                ]);\n            } else {\n                setChatHistory((prevHistory) => [\n                    ...prevHistory,\n                    { sender: 'ai', text: content }\n                ]);\n            }\n\n            // Add logs to the log state\n            setLogs((prevLogs) => [\n                ...prevLogs,\n                `AI responded: ${content}`,\n                `Logs: ${JSON.stringify(logs, null, 2)}`\n            ]);\n\n            // Clear file state after sending the question\n            setFile(null);\n\n        } catch (error) {\n            setChatHistory((prevHistory) => [\n                ...prevHistory,\n                { sender: 'ai', text: \"Failed to get a response.\" }\n            ]);\n            setLogs((prevLogs) => [\n                ...prevLogs,\n                `Error asking question: ${error.message}`\n            ]);\n        } finally {\n            // Hide typing indicator\n            setIsTyping(false);\n            setMessage('');\n        }\n    };\n\n    // Function to handle file selection\n    const handleFileChange = (e) => {\n        if (e.target.files.length > 0) {\n            setFile(e.target.files[0]);\n        }\n    };\n\n    // Function to copy text to clipboard\n    const handleCopyToClipboard = (text) => {\n        navigator.clipboard.writeText(text).then(() => {\n            alert('Copied to clipboard!');\n        });\n    };\n\n    // Scroll to the bottom of logs when new logs are added\n    useEffect(() => {\n        logsEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [logs]);\n\n    // Function to toggle logs visibility\n    const toggleLogs = () => {\n        setShowLogs((prev) => !prev);\n    };\n\n    // Function to open language menu\n    const handleClickLanguageMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    // Function to close language menu\n    const handleCloseLanguageMenu = () => {\n        setAnchorEl(null);\n    };\n\n    // Function to change language\n    const handleLanguageChange = (lang) => {\n        setLanguage(lang);\n        handleCloseLanguageMenu();\n    };\n\n    return (\n        <Container maxWidth=\"md\" sx={{ mt: 4, display: 'flex', flexDirection: 'column', height: '80vh', position: 'relative' }}>\n            {/* Language selection menu */}\n            <Box sx={{ position: 'absolute', top: 8, right: 8, zIndex: 1300 }}>\n                <IconButton\n                    onClick={handleClickLanguageMenu}\n                    sx={{\n                        color: 'text.secondary',\n                    }}\n                >\n                    <LanguageIcon />\n                </IconButton>\n                <Typography\n                    variant=\"caption\"\n                    sx={{\n                        position: 'absolute',\n                        top: 8,\n                        right: 40,\n                        color: 'text.secondary',\n                    }}\n                >\n                    {language}\n                </Typography>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={handleCloseLanguageMenu}\n                    sx={{ \n                        mt: '10px', // Margin top to position the menu below the button\n                        zIndex: 1400 // Set a high z-index for the menu\n                    }}\n                >\n                    <MenuItem selected={language === 'EN'} onClick={() => handleLanguageChange('EN')}>EN</MenuItem>\n                    <MenuItem selected={language === 'DE'} onClick={() => handleLanguageChange('DE')}>DE</MenuItem>\n                    <MenuItem selected={language === 'RU'} onClick={() => handleLanguageChange('RU')}>RU</MenuItem>\n                    <MenuItem selected={language === 'UA'} onClick={() => handleLanguageChange('UA')}>UA</MenuItem>\n                </Menu>\n            </Box>\n\n            <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"primary\">\n                AI Chat\n            </Typography>\n\n            {/* Chat history */}\n            <Box sx={{ flexGrow: 1, overflowY: 'auto', mb: 2, p: 2, border: '1px solid #ccc', borderRadius: '4px' }}>\n                {chatHistory.map((entry, index) => (\n                    <Box\n                        key={index}\n                        sx={{\n                            display: 'flex',\n                            mb: 2,\n                            justifyContent: entry.sender === 'user' ? 'flex-end' : 'flex-start',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                maxWidth: '70%',\n                                bgcolor: entry.sender === 'user' ? 'primary.main' : '#f1f1f1', // Light gray for AI\n                                color: entry.sender === 'user' ? 'white' : 'black',\n                                p: 2,\n                                borderRadius: entry.sender === 'user' ? '16px 16px 0 16px' : '16px 16px 16px 0',\n                                wordBreak: 'break-word', // Break words to prevent overflow\n                                whiteSpace: 'pre-wrap',  // Respect line breaks\n                                overflowWrap: 'break-word', // Break long words\n                                position: 'relative', // For positioning copy icon\n                            }}\n                        >\n                            {entry.text}\n\n                            {entry.sender === 'ai' && (\n                                <IconButton\n                                    sx={{\n                                        position: 'absolute',\n                                        bottom: '-24px', // Move icon down\n                                        left: '8px', // Align with text\n                                        color: 'text.secondary',\n                                        '&:hover': {\n                                            color: 'text.primary',\n                                        },\n                                        p: 0, // Remove padding\n                                        width: '16px', // Smaller icon\n                                        height: '16px',\n                                    }}\n                                    onClick={() => handleCopyToClipboard(entry.text)}\n                                >\n                                    <ContentCopyIcon fontSize=\"inherit\" />\n                                </IconButton>\n                            )}\n                        </Box>\n                    </Box>\n                ))}\n\n                {/* Typing indicator */}\n                {isTyping && (\n                    <Box sx={{ display: 'flex', mb: 2, justifyContent: 'flex-start' }}>\n                        <Box\n                            sx={{\n                                maxWidth: '70%',\n                                bgcolor: '#f1f1f1',\n                                p: 2,\n                                borderRadius: '16px 16px 16px 0',\n                                wordBreak: 'break-word',\n                                whiteSpace: 'pre-wrap',\n                                overflowWrap: 'break-word',\n                            }}\n                        >\n                            <Typography variant=\"body1\" color=\"text.secondary\">\n                                AI is typing...\n                            </Typography>\n                        </Box>\n                    </Box>\n                )}\n            </Box>\n\n            {/* Input field and send button */}\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Enter your message\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') handleSendMessage(); // Send on Enter key\n                    }}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSendMessage}\n                    sx={{ ml: 2 }}\n                    endIcon={<SendIcon />}\n                >\n                    Send\n                </Button>\n            </Box>\n\n            {/* File input */}\n            <Box sx={{ mb: 2 }}>\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleFileChange}\n                    accept=\"image/*\"\n                    style={{ display: 'none' }} // Hide the native file input\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => fileInputRef.current.click()} // Trigger file input click\n                    sx={{ width: '15%' }} // Make button full width\n                >\n                    {file ? `File: ${file.name}` : 'Select File'}\n                </Button>\n            </Box>\n\n            {/* Button to toggle logs visibility */}\n            <IconButton\n                onClick={toggleLogs}\n                sx={{\n                    mb: 2,\n                    alignSelf: 'flex-start',\n                    color: 'primary.main',\n                    '&:hover': {\n                        color: 'primary.dark',\n                    },\n                }}\n            >\n                {showLogs ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                <Typography variant=\"button\" sx={{ ml: 1 }}>\n                    Check Logs\n                </Typography>\n            </IconButton>\n\n            {/* Logs window */}\n            {showLogs && (\n            <Box\n                sx={{\n                height: '150px', // Adjust the height as needed\n                overflowY: 'auto',\n                borderTop: '1px solid #ccc',\n                p: 2,\n                bgcolor: '#f9f9f9',\n                borderRadius: '4px',\n                }}\n            >\n                {logs.question && (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    <strong>Question:</strong> {logs.question}\n                </Typography>\n                )}\n                {logs.relevant_documents && logs.relevant_documents.length > 0 && (\n                <Box>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                    <strong>Relevant Documents:</strong>\n                    </Typography>\n                    {logs.relevant_documents.map((doc, index) => (\n                    <Typography key={index} variant=\"body2\" color=\"text.secondary\">\n                        - {doc}\n                    </Typography>\n                    ))}\n                </Box>\n                )}\n                <div ref={logsEndRef} /> {/* Element for auto-scrolling */}\n            </Box>\n            )}\n        </Container>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}