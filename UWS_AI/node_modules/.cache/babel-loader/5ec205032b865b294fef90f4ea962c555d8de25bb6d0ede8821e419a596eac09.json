{"ast":null,"code":"var _jsxFileName = \"/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [logs, setLogs] = useState([]);\n  const [showLogs, setShowLogs] = useState(false);\n  const logsEndRef = useRef(null);\n\n  // Симуляция отправки сообщения\n  const handleSendMessage = () => {\n    if (message.trim() === '') return;\n\n    // Добавляем сообщение пользователя в историю чата\n    setChatHistory(prevHistory => [...prevHistory, {\n      sender: 'user',\n      text: message\n    }]);\n\n    // Симулируем ответ ИИ\n    const simulatedResponse = `Ответ ИИ на: \"${message}\"`;\n    setChatHistory(prevHistory => [...prevHistory, {\n      sender: 'ai',\n      text: simulatedResponse\n    }]);\n\n    // Очищаем поле ввода после отправки\n    setMessage('');\n\n    // Добавляем логи\n    setLogs(prevLogs => [...prevLogs, `Message sent: ${message}`, `AI responded: ${simulatedResponse}`]);\n  };\n\n  // Функция для копирования текста в буфер обмена\n  const handleCopyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      alert('Copied to clipboard!');\n    });\n  };\n\n  // Скролл до конца логов при добавлении новых\n  useEffect(() => {\n    var _logsEndRef$current;\n    (_logsEndRef$current = logsEndRef.current) === null || _logsEndRef$current === void 0 ? void 0 : _logsEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [logs]);\n\n  // Функция для переключения отображения логов\n  const toggleLogs = () => {\n    setShowLogs(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      color: \"primary\",\n      children: \"AI Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        overflowY: 'auto',\n        mb: 2,\n        p: 2,\n        border: '1px solid #ccc',\n        borderRadius: '4px'\n      },\n      children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          mb: 2,\n          justifyContent: entry.sender === 'user' ? 'flex-end' : 'flex-start'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            maxWidth: '70%',\n            bgcolor: entry.sender === 'user' ? 'primary.main' : '#f1f1f1',\n            // Светло-серый цвет для ИИ\n            color: entry.sender === 'user' ? 'white' : 'black',\n            p: 2,\n            borderRadius: entry.sender === 'user' ? '16px 16px 0 16px' : '16px 16px 16px 0',\n            wordBreak: 'break-word',\n            // Разрывать слова, чтобы предотвратить выход за границы\n            whiteSpace: 'pre-wrap',\n            // Учитывать переносы строк\n            overflowWrap: 'break-word',\n            // Переносить длинные слова\n            position: 'relative' // Для позиционирования иконки копирования\n          },\n          children: [entry.text, entry.sender === 'ai' && /*#__PURE__*/_jsxDEV(IconButton, {\n            sx: {\n              position: 'absolute',\n              bottom: '-24px',\n              // Сдвигаем иконку ниже\n              left: '8px',\n              // Отступ слева, совпадает с отступом текста\n              color: 'text.secondary',\n              '&:hover': {\n                color: 'text.primary'\n              },\n              p: 0,\n              // Убираем внутренние отступы\n              width: '16px',\n              // Уменьшаем размер иконки\n              height: '16px'\n            },\n            onClick: () => handleCopyToClipboard(entry.text),\n            children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Enter your message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') handleSendMessage(); // Отправка при нажатии Enter\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSendMessage,\n        sx: {\n          ml: 2\n        },\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 30\n        }, this),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: toggleLogs,\n      sx: {\n        mb: 2,\n        alignSelf: 'flex-start',\n        color: 'primary.main',\n        '&:hover': {\n          color: 'primary.dark'\n        }\n      },\n      children: [showLogs ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"button\",\n        sx: {\n          ml: 1\n        },\n        children: \"Check Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), showLogs && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '150px',\n        // Высота окна с логами\n        overflowY: 'auto',\n        borderTop: '1px solid #ccc',\n        p: 2,\n        bgcolor: '#f9f9f9',\n        borderRadius: '4px'\n      },\n      children: [logs.map((log, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 1\n        },\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: logsEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"PgUNYRd1wCPMWTDxEjZqylRydzY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Container","TextField","Button","Typography","Box","IconButton","SendIcon","ContentCopyIcon","ExpandMoreIcon","ExpandLessIcon","jsxDEV","_jsxDEV","Home","_s","message","setMessage","chatHistory","setChatHistory","logs","setLogs","showLogs","setShowLogs","logsEndRef","handleSendMessage","trim","prevHistory","sender","text","simulatedResponse","prevLogs","handleCopyToClipboard","navigator","clipboard","writeText","then","alert","_logsEndRef$current","current","scrollIntoView","behavior","toggleLogs","prev","maxWidth","sx","mt","display","flexDirection","height","children","variant","gutterBottom","align","color","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","overflowY","mb","p","border","borderRadius","map","entry","index","justifyContent","bgcolor","wordBreak","whiteSpace","overflowWrap","position","bottom","left","width","onClick","fontSize","alignItems","fullWidth","label","value","onChange","e","target","onKeyPress","key","ml","endIcon","alignSelf","borderTop","log","ref","_c","$RefreshReg$"],"sources":["/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\n\nconst Home = () => {\n    const [message, setMessage] = useState('');\n    const [chatHistory, setChatHistory] = useState([]);\n    const [logs, setLogs] = useState([]);\n    const [showLogs, setShowLogs] = useState(false);\n    const logsEndRef = useRef(null);\n\n    // Симуляция отправки сообщения\n    const handleSendMessage = () => {\n        if (message.trim() === '') return;\n\n        // Добавляем сообщение пользователя в историю чата\n        setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { sender: 'user', text: message }\n        ]);\n\n        // Симулируем ответ ИИ\n        const simulatedResponse = `Ответ ИИ на: \"${message}\"`;\n        setChatHistory((prevHistory) => [\n            ...prevHistory,\n            { sender: 'ai', text: simulatedResponse }\n        ]);\n\n        // Очищаем поле ввода после отправки\n        setMessage('');\n\n        // Добавляем логи\n        setLogs((prevLogs) => [\n            ...prevLogs,\n            `Message sent: ${message}`,\n            `AI responded: ${simulatedResponse}`\n        ]);\n    };\n\n    // Функция для копирования текста в буфер обмена\n    const handleCopyToClipboard = (text) => {\n        navigator.clipboard.writeText(text).then(() => {\n            alert('Copied to clipboard!');\n        });\n    };\n\n    // Скролл до конца логов при добавлении новых\n    useEffect(() => {\n        logsEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [logs]);\n\n    // Функция для переключения отображения логов\n    const toggleLogs = () => {\n        setShowLogs((prev) => !prev);\n    };\n\n    return (\n        <Container maxWidth=\"md\" sx={{ mt: 4, display: 'flex', flexDirection: 'column', height: '80vh' }}>\n            <Typography variant=\"h4\" gutterBottom align=\"center\" color=\"primary\">\n                AI Chat\n            </Typography>\n\n            {/* Блок чата */}\n            <Box sx={{ flexGrow: 1, overflowY: 'auto', mb: 2, p: 2, border: '1px solid #ccc', borderRadius: '4px' }}>\n                {chatHistory.map((entry, index) => (\n                    <Box\n                        key={index}\n                        sx={{\n                            display: 'flex',\n                            mb: 2,\n                            justifyContent: entry.sender === 'user' ? 'flex-end' : 'flex-start',\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                maxWidth: '70%',\n                                bgcolor: entry.sender === 'user' ? 'primary.main' : '#f1f1f1', // Светло-серый цвет для ИИ\n                                color: entry.sender === 'user' ? 'white' : 'black',\n                                p: 2,\n                                borderRadius: entry.sender === 'user' ? '16px 16px 0 16px' : '16px 16px 16px 0',\n                                wordBreak: 'break-word', // Разрывать слова, чтобы предотвратить выход за границы\n                                whiteSpace: 'pre-wrap',  // Учитывать переносы строк\n                                overflowWrap: 'break-word', // Переносить длинные слова\n                                position: 'relative', // Для позиционирования иконки копирования\n                            }}\n                        >\n                            {entry.text}\n\n                            {entry.sender === 'ai' && (\n                                <IconButton\n                                    sx={{\n                                        position: 'absolute',\n                                        bottom: '-24px', // Сдвигаем иконку ниже\n                                        left: '8px', // Отступ слева, совпадает с отступом текста\n                                        color: 'text.secondary',\n                                        '&:hover': {\n                                            color: 'text.primary',\n                                        },\n                                        p: 0, // Убираем внутренние отступы\n                                        width: '16px', // Уменьшаем размер иконки\n                                        height: '16px',\n                                    }}\n                                    onClick={() => handleCopyToClipboard(entry.text)}\n                                >\n                                    <ContentCopyIcon fontSize=\"inherit\" />\n                                </IconButton>\n                            )}\n                        </Box>\n                    </Box>\n                ))}\n            </Box>\n\n            {/* Поле ввода и кнопка */}\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Enter your message\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') handleSendMessage(); // Отправка при нажатии Enter\n                    }}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSendMessage}\n                    sx={{ ml: 2 }}\n                    endIcon={<SendIcon />}\n                >\n                    Send\n                </Button>\n            </Box>\n\n            {/* Кнопка для отображения/скрытия логов */}\n            <IconButton\n                onClick={toggleLogs}\n                sx={{\n                    mb: 2,\n                    alignSelf: 'flex-start',\n                    color: 'primary.main',\n                    '&:hover': {\n                        color: 'primary.dark',\n                    },\n                }}\n            >\n                {showLogs ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                <Typography variant=\"button\" sx={{ ml: 1 }}>\n                    Check Logs\n                </Typography>\n            </IconButton>\n\n            {/* Выпадающее окно с логами */}\n            {showLogs && (\n                <Box\n                    sx={{\n                        height: '150px', // Высота окна с логами\n                        overflowY: 'auto',\n                        borderTop: '1px solid #ccc',\n                        p: 2,\n                        bgcolor: '#f9f9f9',\n                        borderRadius: '4px',\n                    }}\n                >\n                    {logs.map((log, index) => (\n                        <Typography key={index} variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                            {log}\n                        </Typography>\n                    ))}\n                    <div ref={logsEndRef} /> {/* Элемент для автоматической прокрутки */}\n                </Box>\n            )}\n        </Container>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}