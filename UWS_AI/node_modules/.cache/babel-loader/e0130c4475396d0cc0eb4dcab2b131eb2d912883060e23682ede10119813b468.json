{"ast":null,"code":"var _jsxFileName = \"/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/UploadDataPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box, Button, TextField, LinearProgress, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Snackbar, Alert } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { loadData } from './api'; // Import your API functions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadDataPage = ({\n  open,\n  onClose\n}) => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success'); // 'success' or 'error'\n\n  const handleUrlChange = e => {\n    setUrl(e.target.value);\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbarOpen(false);\n  };\n  const handleUpload = async () => {\n    if (!url) {\n      setSnackbarMessage('URL is required.');\n      setSnackbarSeverity('error');\n      setSnackbarOpen(true);\n      return;\n    }\n    setUploading(true);\n    try {\n      await loadData(url);\n      setSnackbarMessage('Data loaded successfully from URL.');\n      setSnackbarSeverity('success');\n      onClose();\n    } catch (error) {\n      setSnackbarMessage('Error loading data from URL.');\n      setSnackbarSeverity('error');\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: onClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Load Data from URL\", /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          color: \"inherit\",\n          onClick: onClose,\n          \"aria-label\": \"close\",\n          sx: {\n            position: 'absolute',\n            right: 8,\n            top: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"URL\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: url,\n            onChange: handleUrlChange,\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleUpload,\n          disabled: uploading,\n          children: \"Load Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), uploading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: handleCloseSnackbar,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbarSeverity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UploadDataPage, \"eQadfVnqI8k+wsGhzNl9WUVIDqs=\");\n_c = UploadDataPage;\nexport default UploadDataPage;\nvar _c;\n$RefreshReg$(_c, \"UploadDataPage\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Button","TextField","LinearProgress","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Snackbar","Alert","CloseIcon","loadData","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadDataPage","open","onClose","_s","url","setUrl","uploading","setUploading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","handleUrlChange","e","target","value","handleCloseSnackbar","handleUpload","error","children","maxWidth","fullWidth","edge","color","onClick","sx","position","right","top","fileName","_jsxFileName","lineNumber","columnNumber","mb","label","variant","onChange","disabled","mt","autoHideDuration","action","size","fontSize","severity","width","_c","$RefreshReg$"],"sources":["/Users/seinarukiro/Documents/UWS/AI-UI/ai-extension/src/pages/UploadDataPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Container, Typography, Box, Button, TextField, LinearProgress, Dialog,\n    DialogActions, DialogContent, DialogTitle, IconButton, Snackbar, Alert\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { loadData } from './api'; // Import your API functions\n\nconst UploadDataPage = ({ open, onClose }) => {\n    const [url, setUrl] = useState('');\n    const [uploading, setUploading] = useState(false);\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState('success'); // 'success' or 'error'\n\n    const handleUrlChange = (e) => {\n        setUrl(e.target.value);\n    };\n\n    const handleCloseSnackbar = () => {\n        setSnackbarOpen(false);\n    };\n\n    const handleUpload = async () => {\n        if (!url) {\n            setSnackbarMessage('URL is required.');\n            setSnackbarSeverity('error');\n            setSnackbarOpen(true);\n            return;\n        }\n\n        setUploading(true);\n\n        try {\n            await loadData(url);\n            setSnackbarMessage('Data loaded successfully from URL.');\n            setSnackbarSeverity('success');\n            onClose();\n        } catch (error) {\n            setSnackbarMessage('Error loading data from URL.');\n            setSnackbarSeverity('error');\n        } finally {\n            setUploading(false);\n        }\n    };\n\n    return (\n        <>\n            <Dialog\n                open={open}\n                onClose={onClose}\n                maxWidth=\"sm\"\n                fullWidth\n            >\n                <DialogTitle>\n                    Load Data from URL\n                    <IconButton\n                        edge=\"end\"\n                        color=\"inherit\"\n                        onClick={onClose}\n                        aria-label=\"close\"\n                        sx={{ position: 'absolute', right: 8, top: 8 }}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                </DialogTitle>\n                <DialogContent>\n                    <Box sx={{ mb: 2 }}>\n                        <TextField\n                            label=\"URL\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={url}\n                            onChange={handleUrlChange}\n                            sx={{ mb: 2 }}\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleUpload}\n                        disabled={uploading}\n                    >\n                        Load Data\n                    </Button>\n                </DialogActions>\n                {uploading && <LinearProgress sx={{ mt: 2 }} />}\n            </Dialog>\n\n            <Snackbar\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleCloseSnackbar}\n                action={\n                    <IconButton\n                        size=\"small\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={handleCloseSnackbar}\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            >\n                <Alert\n                    onClose={handleCloseSnackbar}\n                    severity={snackbarSeverity}\n                    sx={{ width: '100%' }}\n                >\n                    {snackbarMessage}\n                </Alert>\n            </Snackbar>\n        </>\n    );\n};\n\nexport default UploadDataPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}